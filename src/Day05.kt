import java.math.BigDecimal

fun main() {
    val lines = readInput("Day05")

    println(part1(lines).toPlainString())
    println(part2(lines))
}

private fun part1(lines: List<String>): BigDecimal {
    val seeds = getSeeds().split(' ').map { it.toBigDecimal() }
    val mappings = listOf(
        seedToSoil(),
        soilToFertilizer(),
        fertilizerToWater(),
        waterToLight(),
        lightToTemperature(),
        temperatureToHumidity(),
        humidityToLocation()
    )
        .map { getMaps(it) }
        .map { it.sortedBy { it.second } }
        .toList()

    var minLocation = BigDecimal.valueOf(Double.MAX_VALUE)
    for (seed in seeds) {
        var currentLocation = seed
        for (mapping in mappings) {
            val maybeFirst = mapping.firstOrNull { currentLocation >= it.second && currentLocation < it.second + it.third }
            if (maybeFirst == null) {
                continue
            } else {
                currentLocation = currentLocation - maybeFirst.second + maybeFirst.first
            }
        }

        minLocation = minLocation.min(currentLocation)
    }

    return minLocation
}


private fun getMaps(rawMap: String): List<Triple<BigDecimal, BigDecimal, BigDecimal>> {
    return rawMap.split('\n')
        .map { it.split(' ').map { it.toBigDecimal() } }
        .map { Triple(it[0], it[1], it[2]) }
}

private fun part2(lines: List<String>): BigDecimal {
    val mappings = listOf(
        seedToSoil(),
        soilToFertilizer(),
        fertilizerToWater(),
        waterToLight(),
        lightToTemperature(),
        temperatureToHumidity(),
        humidityToLocation()
    )
        .map { getMaps(it) }
        .map { it.sortedBy { it.second } }
        .toList()

    var minLocation = BigDecimal.valueOf(Double.MAX_VALUE)
    val rawSeeds = getSeeds().split(' ').map { it.toBigDecimal() }

    println("The amount of seeds ${rawSeeds.filterIndexed { index, bigDecimal -> index % 2 != 0 }.sumOf { it.toInt() }}")

    var k = 0
    for(i in 0 until rawSeeds.lastIndex step 2) {
        for (j in 0 until rawSeeds[i + 1].toInt()) {
            minLocation = processSeed(rawSeeds[i] + j.toBigDecimal(), mappings, minLocation)
            k++

            if (k % 1000 == 0) {
                println("Processed $k seeds")
            }
        }
    }

    return minLocation
}

private fun processSeed(
    seed: BigDecimal,
    mappings: List<List<Triple<BigDecimal, BigDecimal, BigDecimal>>>,
    minLocation: BigDecimal,
): BigDecimal {
    var minLocation1 = minLocation
    var currentLocation = seed
    for (mapping in mappings) {
        val maybeFirst = mapping.firstOrNull { currentLocation >= it.second && currentLocation < it.second + it.third }
        if (maybeFirst == null) {
            continue
        } else {
            currentLocation = currentLocation - maybeFirst.second + maybeFirst.first
        }
    }

    minLocation1 = minLocation1.min(currentLocation)

    return minLocation1
}

private fun getSeeds(): String {
    //return "79 14 55 13"
    return "194657215 187012821 1093203236 6077151 44187305 148722449 2959577030 152281079 3400626717 198691716 1333399202 287624830 2657325069 35258407 1913289352 410917164 1005856673 850939 839895010 162018909"
}

private fun seedToSoil(): String {
//    return "50 98 2\n" +
//            "52 50 48"

    return "466206721 134904099 264145987\n" +
            "3226739510 2500159633 122177414\n" +
            "1107118949 4139510909 155456387\n" +
            "2314679916 2622337047 59899451\n" +
            "2642618541 1908002826 511067679\n" +
            "0 399050086 167531444\n" +
            "1262575336 2682236498 1052104580\n" +
            "3448620320 1415756771 259155097\n" +
            "302435543 566581530 163771178\n" +
            "3348916924 4039807513 99703396\n" +
            "3153686220 1674911868 73053290\n" +
            "3788293662 1747965158 160037668\n" +
            "3948331330 3734341078 305466435\n" +
            "2374579367 1228806725 186950046\n" +
            "2561529413 2419070505 81089128\n" +
            "167531444 0 134904099\n" +
            "3707775417 1148288480 80518245\n" +
            "4253797765 1107118949 41169531"
}

private fun soilToFertilizer(): String {
//    return "0 15 37\n" +
//            "37 52 2\n" +
//            "39 0 15"

    return "3913658055 3217667557 44136240\n" +
            "3043638173 1755409772 387575354\n" +
            "1214033686 3261803797 213545970\n" +
            "3431213527 3475349767 482444528\n" +
            "1994011339 2522356968 695310589\n" +
            "2689321928 1214033686 354316245\n" +
            "1427579656 2142985126 379371842\n" +
            "1806951498 1568349931 187059841"
}

private fun fertilizerToWater(): String {
//    return "49 53 8\n" +
//            "0 11 42\n" +
//            "42 0 7\n" +
//            "57 7 4"

    return "2553394045 2097964132 64191777\n" +
            "3153687517 3499502814 665965431\n" +
            "1104565830 789107360 151317021\n" +
            "4084493704 2165934452 60088979\n" +
            "981078109 1551802916 123487721\n" +
            "2935219151 4165468245 66838136\n" +
            "10669639 1277616562 132965227\n" +
            "839228347 1410581789 141221127\n" +
            "3942173186 2018304529 79659603\n" +
            "393057134 444333135 344145590\n" +
            "2617585822 2253442971 317633329\n" +
            "4237573988 3156387517 57393308\n" +
            "1341340213 99436946 344896189\n" +
            "143634866 1746717555 204406814\n" +
            "776848617 0 21473714\n" +
            "386359019 1270918447 6698115\n" +
            "4168968434 3430897260 68605554\n" +
            "2497629182 3375132397 55764863\n" +
            "3819652948 3213780825 9721342\n" +
            "1686236402 940424381 47687418\n" +
            "4021832789 4232306381 62660915\n" +
            "4144582683 2162155909 3778543\n" +
            "1733923820 1675290637 30520902\n" +
            "737202724 21473714 39645893\n" +
            "2018304529 2591683508 479324653\n" +
            "798322331 1705811539 40906016\n" +
            "0 1260248808 10669639\n" +
            "980449474 788478725 628635\n" +
            "3002057287 3223502167 151630230\n" +
            "3829374290 2226023431 27419540\n" +
            "348041680 61119607 38317339\n" +
            "3856793830 3071008161 85379356\n" +
            "1764444722 1073569161 186679647\n" +
            "4148361226 2571076300 20607208\n" +
            "1255882851 988111799 85457362"
}

private fun waterToLight(): String {
//    return "88 18 7\n" +
//            "18 25 70"

    return "3143216572 2396957585 46085818\n" +
            "2930160319 3087666064 82806318\n" +
            "3012966637 3275730008 11481558\n" +
            "1791164654 628261856 251676187\n" +
            "1156959152 1008045214 174725983\n" +
            "3597974089 4238330323 56636973\n" +
            "2659665097 3287211566 62612544\n" +
            "489714994 0 304501033\n" +
            "2323644539 2017991146 71374674\n" +
            "2611713237 3480351863 47951860\n" +
            "4135255968 3931716786 159711328\n" +
            "1331685135 879938043 128107171\n" +
            "2396957585 2748883399 70018348\n" +
            "408833803 1297158141 80881191\n" +
            "1469631779 1182771197 103330914\n" +
            "4004728215 3349824110 58812180\n" +
            "1012078485 2008335392 9655754\n" +
            "3024448195 2932857654 118768377\n" +
            "192304632 2089365820 87451432\n" +
            "4063540395 3408636290 71715573\n" +
            "3823753472 2665304126 83579273\n" +
            "117236420 1933267180 75068212\n" +
            "2218325460 1378039332 105319079\n" +
            "2722277641 3170472382 32223106\n" +
            "1459792306 618379493 9839473\n" +
            "3225342423 3528303723 55360789\n" +
            "901528396 304501033 110507199\n" +
            "3654611062 2471800766 96107890\n" +
            "1012035595 628218966 42890\n" +
            "1118925110 1719748519 38034042\n" +
            "3907332745 2567908656 97395470\n" +
            "2466975933 3786979482 144737304\n" +
            "794216027 1612436150 107312369\n" +
            "2901402956 2443043403 28757363\n" +
            "0 415008232 117236420\n" +
            "3750718952 3202695488 73034520\n" +
            "3189302390 3051626031 36040033\n" +
            "3394659119 3583664512 203314970\n" +
            "2754500747 4091428114 146902209\n" +
            "2042840841 1757782561 175484619\n" +
            "3280703212 2818901747 113955907\n" +
            "1021734239 532244652 86134841\n" +
            "279756064 1483358411 129077739\n" +
            "1572962693 2176817252 218201961\n" +
            "1107869080 1286102111 11056030"
}

private fun lightToTemperature(): String {
//    return "45 77 23\n" +
//            "81 45 19\n" +
//            "68 64 13"

    return "1609050489 2309171782 372577802\n" +
            "2023682469 2836643763 897111138\n" +
            "834447570 143604042 411534753\n" +
            "428779503 1217157762 28824561\n" +
            "143604042 931982301 108906615\n" +
            "252510657 1040888916 176268846\n" +
            "3431278062 1484221851 471209429\n" +
            "1981628291 3733754901 42054178\n" +
            "4140073117 2681749584 154894179\n" +
            "1484221851 4170138658 124828638\n" +
            "3902487491 1955431280 237585626\n" +
            "457604064 555138795 376843506\n" +
            "3036948483 3775809079 394329579\n" +
            "2920793607 2193016906 116154876"
}

private fun temperatureToHumidity(): String {
//    return "0 69 1\n" +
//            "1 0 69"

    return "1348484361 0 45849582\n" +
            "1394333943 726347262 166590764\n" +
            "1797084784 3346946555 119105515\n" +
            "1163891565 1265639794 165909682\n" +
            "2199751891 3274125222 72821333\n" +
            "4012454029 2231107899 181228118\n" +
            "1008425725 207338839 56688993\n" +
            "2322219090 3174539335 24543729\n" +
            "3987057737 3199083064 25396292\n" +
            "1560924707 45849582 62712410\n" +
            "3424140824 1837299459 190417072\n" +
            "2272573224 3224479356 27702302\n" +
            "2346762819 2412336017 518856401\n" +
            "329181964 1432789749 172164254\n" +
            "3783666369 2027716531 203391368\n" +
            "753484930 471406467 254940795\n" +
            "1916190299 2931192418 243346917\n" +
            "501346218 892938026 44760077\n" +
            "1329801247 1604954003 18683114\n" +
            "2865619220 3567337219 558521604\n" +
            "546106295 264027832 207378635\n" +
            "2300275526 3252181658 21943564\n" +
            "4193682147 3466052070 101285149\n" +
            "327941691 1431549476 1240273\n" +
            "0 937698103 327941691\n" +
            "2159537216 1797084784 40214675\n" +
            "3614557896 4125858823 169108473\n" +
            "1065114718 108561992 98776847"
}

private fun humidityToLocation(): String {
//    return "60 56 37\n" +
//            "56 93 4"

    return "440744287 1133551978 536306564\n" +
            "4042633851 4000620330 37465866\n" +
            "977050851 1669858542 136276424\n" +
            "2136551597 4038086196 256881100\n" +
            "198620952 0 242123335\n" +
            "1113327275 242123335 891428643\n" +
            "4080099717 3802748040 197872290\n" +
            "2695699324 2136551597 1346934527\n" +
            "4277972007 3785752751 16995289\n" +
            "2393432697 3483486124 302266627\n" +
            "0 1806134966 198620952"
}
